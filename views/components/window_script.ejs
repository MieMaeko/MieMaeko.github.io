<script>
    //Всплывающее окно профиля
    const profile = document.querySelector('.window_profile');
    if(profile) {
        let med_width = document.documentElement.clientWidth;
        document.querySelector(".profile_menu li").style.width = document.querySelector(".profile").offsetWidth + "px";
        const menuProfile = document.querySelector('.profile_menu');
        const menuLinks = document.querySelectorAll('.menu-item');
        profile.addEventListener('click', (e) => {
            profile.classList.toggle('active');
            menuProfile.classList.toggle('active');  // Добавляем класс 'active' к меню

            if (profile.classList.contains('active')) {
                profile.setAttribute('aria-expanded', 'true');
                menuProfile.setAttribute('aria-hidden', 'false');
                menuLinks.forEach(link => link.setAttribute('tabindex', '0')); // Разрешаем фокус на элементах
            } else {
                profile.setAttribute('aria-expanded', 'false');
                menuProfile.setAttribute('aria-hidden', 'true');
                menuLinks.forEach(link => link.setAttribute('tabindex', '-1')); // Блокируем фокус на элементах
        }});
    }
    
    //Всплывающие формы
    const popupBg = document.querySelector('.bg'); 
    const popup = document.querySelector('.form_phone'); 
    const nextPopUp = document.querySelector('.next_window');
    const wrong = document.getElementById('wrong')
    const reg = document.getElementById('reg');
    const openPopUps = document.querySelectorAll('.open-popup'); 
    const closePopUp = document.querySelectorAll('.close-popup');
    openPopUps.forEach(openPopUp =>{
        openPopUp.addEventListener('click', () => { 
            event.preventDefault(); 
            popupBg.classList.add('active'); 
            popup.classList.add('active');
        });
        openPopUp.addEventListener('mouseover', ()=>{
            openPopUp.querySelector('p').classList.add('purple');
            openPopUp.querySelector('i').classList.add('purple')
        });
        openPopUp.addEventListener('mouseout', ()=>{
            openPopUp.querySelector('p').classList.remove('purple');
            openPopUp.querySelector('i').classList.remove('purple')
        })
    })
    reg.addEventListener('click',()=>{
        event.preventDefault();
        popup.classList.remove('active');
        nextPopUp.classList.add('active');
    })
    closePopUp.forEach(closePopUp =>{
        closePopUp.addEventListener('click',() => { 
            popupBg.classList.remove('active'); 
            nextPopUp.classList.remove('active');
            popup.classList.remove('active'); 
        });
    })
    const login = document.getElementById('login-form');
    const errorMessage1 = document.getElementById('error-message1');
    login.addEventListener('submit', function(event) {
        event.preventDefault(); // Предотвратить стандартную отправку формы
        const formData = new FormData(login);
        fetch('/login', {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (response.ok) {
                // Успешная авторизация, редирект
                window.location.href = '/';  // Можно перенаправить на главную страницу или профиль
            } else {
                return response.json(); // Ошибка авторизации, получить ошибку из ответа
            }
        })
        .then(data => {
            if (data && data.error) {
                // Показать сообщение об ошибке
                errorMessage1.textContent = data.error;
                errorMessage1.hidden = false;
            }
        })
        .catch(error => {
            console.error('Error:', error);
            
        });
    });
        

    const shows_a = document.querySelectorAll('.show_a');

    shows_a.forEach(show=>{
        show.addEventListener('click', (event) => {
        let buy = show.querySelector('.buy');
        if (buy) {
            // Если контент платный
            if (!userId) {
                // Если пользователь не авторизован, отменить переход и показать окно
                event.preventDefault();
                popupBg.classList.add('active');
                popup.classList.add('active');
            }
        }
        })
    })


    const register = document.getElementById('register-form');
    const errorMessage2 = document.getElementById('error-message2');

    register.addEventListener('submit', function(event) {
        event.preventDefault(); // Предотвратить стандартную отправку формы

        const formData = new FormData(register);

        fetch('/reg', {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (response.ok) {
                // Успешная регистрация, редирект на профиль
                window.location.href = '/profile';
            } else {
                return response.json(); // Ошибка, получаем данные ошибки
            }
        })
        .then(data => {
            if (data && data.error) {
                // Отображаем ошибку, если логин уже занят
                errorMessage2.textContent = data.error;
                errorMessage2.hidden = false; // Показываем сообщение
            }
        })
        .catch(error => {
            console.error('Error:', error);
            // Вы можете обработать другие ошибки, например, сетевые
        });
    });


    //Бургер меню
    let menuBtn = document.querySelector('.burger_menu');
    let width = document.documentElement.clientWidth;
    let html = document.querySelector('html')
    let menu = document.querySelector('.menu');
    if(width>=901) {
        menuBtn.remove();
    }
    else {
        menuBtn.addEventListener('click', function(){
        this.classList.toggle('active');
        menu.classList.toggle('active');
        html.classList.toggle('fixed')
        })
    }

    //удаление комментария
    // document.querySelectorAll('.delete-comment').forEach(button => {
    //     button.addEventListener('click', function() {
    //         const commentId = this.closest('.comment').getAttribute('data-comment-id');
            
    //                     fetch(`/delete-comment/${commentId}`, {
    //                     method: 'DELETE',
    //                     headers: {
    //                 'Content-Type': 'application/json'
    //             }
    //         })
    //         .then(response => { 
    //             if (!response.ok) {
    //                 return response.json().then(error => {
    //                     console.error('Ошибка:', error); // Покажет ошибку, если сервер вернул ошибку
    //                     alert('Ошибка при удалении комментария');
    //                 });
    //             }
    //             return response.json();
    //         })
    //         .then(data => {
    //             if (data.success) {
    //                 this.closest('.comment').remove();
    //             }
    //         })
    //         .catch(err => {
    //             console.error('Ошибка:', err);
    //             alert('Ошибка при удалении комментария');
    //         });
    //     });
    // });
    

</script>